{
	"info": {
		"_postman_id": "635fba41-d975-4a5d-908a-bd604561838c",
		"name": "Album CRUD",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create Album",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Created\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns albumId\", function () {\r",
							"    pm.response.text() != null && pm.response.text() != \"\" \r",
							"});\r",
							"\r",
							"pm.collectionVariables.set(\"albumId\", pm.response.text());"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Some Name\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/album/save",
					"host": [
						"{{url}}"
					],
					"path": [
						"album",
						"save"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Album",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ok\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Retrieved album id matches requested\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var expectedAlbumId = pm.collectionVariables.toObject()[\"albumId\"];\r",
							"\r",
							"    pm.expect(jsonData.albumId).to.eql(expectedAlbumId);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/album/get?albumId={{albumId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"album",
						"get"
					],
					"query": [
						{
							"key": "albumId",
							"value": "{{albumId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Album is in Albums List",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ok\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Is in list\", function () {\r",
							"    var albums = pm.response.json();\r",
							"    var expectedAlbumId = pm.collectionVariables.toObject()[\"albumId\"];\r",
							"\r",
							"\r",
							"    var foundExpectedAlbumId = false;\r",
							"    for(let i = 0; i < albums.length; i++){\r",
							"        \r",
							"        if(albums[i].albumId == expectedAlbumId)\r",
							"            foundExpectedAlbumId = true;\r",
							"    }\r",
							"\r",
							"    pm.expect(foundExpectedAlbumId).to.eql(true);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/album/GetAll",
					"host": [
						"{{url}}"
					],
					"path": [
						"album",
						"GetAll"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Album",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Created\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Returns albumId\", function () {\r",
							"    pm.response.text() != null && pm.response.text() != \"\" \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"albumId\": \"{{albumId}}\",\r\n    \"name\": \"Some Other Name\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/album/save",
					"host": [
						"{{url}}"
					],
					"path": [
						"album",
						"save"
					]
				}
			},
			"response": []
		},
		{
			"name": "Album was updated",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ok\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Retrieved album id matches requested\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var expectedAlbumId = pm.collectionVariables.toObject()[\"albumId\"];\r",
							"\r",
							"    pm.expect(jsonData.albumId).to.eql(expectedAlbumId);\r",
							"});\r",
							"\r",
							"pm.test(\"Retrieved album uses updated name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    var expectedName = \"Some Other Name\";\r",
							"\r",
							"    pm.expect(jsonData.name).to.eql(expectedName);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/album/get?albumId={{albumId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"album",
						"get"
					],
					"query": [
						{
							"key": "albumId",
							"value": "{{albumId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Album",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Accepted\", function () {\r",
							"    pm.response.to.have.status(202);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}/album/delete?albumId={{albumId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"album",
						"delete"
					],
					"query": [
						{
							"key": "albumId",
							"value": "{{albumId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Can't retrieve Album",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"No Content\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"pm.test(\"Album is null\", function () {\r",
							"    var body = pm.response.text();\r",
							"\r",
							"    pm.expect(body).to.eql('');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/album/get?albumId={{albumId}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"album",
						"get"
					],
					"query": [
						{
							"key": "albumId",
							"value": "{{albumId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Album is not in Albums List",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Ok\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Is no longer in list\", function () {\r",
							"    var albums = pm.response.json();\r",
							"    var expectedAlbumId = pm.collectionVariables.toObject()[\"albumId\"];\r",
							"\r",
							"\r",
							"    var foundExpectedAlbumId = false;\r",
							"    for(let i = 0; i < albums.length; i++){\r",
							"        \r",
							"        if(albums[i].albumId == expectedAlbumId)\r",
							"            foundExpectedAlbumId = true;\r",
							"    }\r",
							"\r",
							"    pm.expect(foundExpectedAlbumId).to.eql(false);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/album/GetAll",
					"host": [
						"{{url}}"
					],
					"path": [
						"album",
						"GetAll"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "albumId",
			"value": ""
		}
	]
}